name: Update Snapshots
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - labeled
      - reopened
jobs:
  update-snapshots:
    if: contains(github.event.pull_request.labels.*.name, 'ci/update-snapshots')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ci/updating-snapshots

      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: ci/update-snapshots

      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: installing dependencies and build
        run: |
          yarn install
          yarn build
          yarn package

      - name: formatting code
        run: |
          yarn format

      - name: updating unit tests
        run: |
          yarn test:update

      - name: updating integration tests
        run: |
          yarn integration:update

      - id: self_mutation
        name: Find mutations
        run: >-
          git add .
          git diff --staged --patch --exit-code || echo "::set-output name=self_mutation_happened::true"

      - name: Commit changes
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |
          git fetch
          git add .
          git commit -s -m "chore: update snapshots"
          git pull origin HEAD:${{ github.event.pull_request.head.ref }} --rebase
          git push origin HEAD:${{ github.event.pull_request.head.ref }} --force

      - uses: actions-ecosystem/action-remove-labels@v1
        if: always()
        with:
          labels: ci/updating-snapshots
